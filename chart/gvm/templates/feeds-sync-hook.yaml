{{- if (or .Values.syncFeedsAfterInstall .Values.customFeedsServer.enabled) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "gvm.fullname" . }}-feeds-sync
  labels:
  {{- include "gvm.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ include "gvm.instance" . }}
    spec:
      restartPolicy: Never
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ tpl .Values.image.gvmd.registry . }}/{{ tpl .Values.image.gvmd.repository . }}:{{ tpl .Values.image.gvmd.tag . }}"
          imagePullPolicy: {{ tpl .Values.image.gvmd.pullPolicy . }}
          command: ["/bin/sh"]
          args:
            - "-cex"
            - |
              {{- if .Values.customFeedsServer.enabled }}
              while ! timeout 5s bash -c "</dev/tcp/{{ include "gvm.fullname" . }}-feeds-server/{{ .Values.customFeedsServer.service.port }}"; do
                  sleep 1
              done
              {{- end }}
              greenbone-nvt-sync
              greenbone-feed-sync --type CERT
              greenbone-feed-sync --type SCAP
              greenbone-feed-sync --type GVMD_DATA
          {{- if .Values.customFeedsServer.enabled }}
          env:
            - name: COMMUNITY_NVT_RSYNC_FEED
              value: rsync://{{ include "gvm.fullname" . }}-feeds-server:{{ .Values.customFeedsServer.service.port }}/nvt-feed
            - name: COMMUNITY_CERT_RSYNC_FEED
              value: rsync://{{ include "gvm.fullname" . }}-feeds-server:{{ .Values.customFeedsServer.service.port }}/cert-data
            - name: COMMUNITY_SCAP_RSYNC_FEED
              value: rsync://{{ include "gvm.fullname" . }}-feeds-server:{{ .Values.customFeedsServer.service.port }}/scap-data
            - name: COMMUNITY_GVMD_DATA_RSYNC_FEED
              value: rsync://{{ include "gvm.fullname" . }}-feeds-server:{{ .Values.customFeedsServer.service.port }}/data-objects/gvmd/
          {{- end }}
          volumeMounts:
            - name: run-dir
              mountPath: /run
            - name: run-dir
              subPath: gvm
              mountPath: /run/gvm
            - name: data-volume
              subPath: {{ include "gvm.dataSubPathPrefix" . }}openvas
              mountPath: /var/lib/openvas
            - name: data-volume
              subPath: {{ include "gvm.dataSubPathPrefix" . }}gvm
              mountPath: /var/lib/gvm
      volumes:
        - name: run-dir
          emptyDir: {}
        - name: data-volume
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ tpl .Values.persistence.existingClaim . | default (include "gvm.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
