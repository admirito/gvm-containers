apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gvm.fullname" . }}-openvas
  labels:
  {{- $_ := set . "applicationNameSuffix" "openvas" }}
  {{- include "gvm.labels" . | nindent 4 }}
  {{- $_ := set . "applicationNameSuffix" "" }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "gvm.name" . }}-openvas
      app.kubernetes.io/instance: {{ include "gvm.instance" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "gvm.name" . }}-openvas
        app.kubernetes.io/instance: {{ include "gvm.instance" . }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ tpl .Values.image.openvas.registry . }}/{{ tpl .Values.image.openvas.repository . }}:{{ tpl .Values.image.openvas.tag . }}"
          imagePullPolicy: {{ tpl .Values.image.openvas.pullPolicy . }}
          env:
            {{- if and .Values.customFeedsServer.enabled .Values.customFeedsServer.setDefaultFeedServerForGVM }}
            - name: COMMUNITY_NVT_RSYNC_FEED
              value: rsync://{{ include "gvm.fullname" . }}-feeds-server:{{ .Values.customFeedsServer.service.port }}/nvt-feed
            {{- end }}
            {{- range $item := .Values.extraEnv.openvas }}
            - name: {{ tpl $item.name $ | quote }}
              value: {{ tpl $item.value $ | quote }}
            {{- end }}
          volumeMounts:
            - name: run-dir
              mountPath: /run
            - name: run-dir
              subPath: redis
              mountPath: /run/redis
            - name: data-volume
              subPath: {{ include "gvm.dataSubPathPrefix" . }}openvas
              mountPath: /var/lib/openvas
          resources:
            {{- toYaml .Values.resources.openvas | nindent 12 }}
        - name: {{ .Chart.Name }}-openvas-listener
          image: "{{ tpl .Values.image.socat.registry . }}/{{ tpl .Values.image.socat.repository . }}:{{ tpl .Values.image.socat.tag . }}"
          imagePullPolicy: {{ tpl .Values.image.socat.pullPolicy . }}
          args: ["-d", "-d", "TCP4-LISTEN:9391,fork", "UNIX-CONNECT:/run/ospd/ospd.sock"]
          ports:
            - name: openvas
              containerPort: 9391
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: openvas
          readinessProbe:
            tcpSocket:
              port: openvas
          volumeMounts:
            - name: run-dir
              mountPath: /run
          resources:
            {{- toYaml .Values.resources.openvasListener | nindent 12 }}
        - name: {{ .Chart.Name }}-redis-connector
          image: "{{ tpl .Values.image.socat.registry . }}/{{ tpl .Values.image.socat.repository . }}:{{ tpl .Values.image.socat.tag . }}"
          imagePullPolicy: {{ tpl .Values.image.socat.pullPolicy . }}
          args: ["-d", "-d", "UNIX-LISTEN:/run/redis/redis.sock,fork", "TCP4-CONNECT:{{ .Release.Name }}-openvas-redis-master:6379"]
          volumeMounts:
            - name: run-dir
              mountPath: /run
            - name: run-dir
              subPath: redis
              mountPath: /run/redis
          resources:
            {{- toYaml .Values.resources.openvasRedisConnector | nindent 12 }}
      volumes:
        - name: run-dir
          emptyDir: {}
        - name: data-volume
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ tpl .Values.persistence.existingClaim . | default (include "gvm.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
