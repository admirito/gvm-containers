## Default values for gvm.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

replicaCount: 1

## To change all the gvm tags together you can use go templates.
## Example:
#
# global:
#   gvmImageTag: "21"
# image:
#   gvmd:
#     tag: "{{ .Values.global.gvmImageTag }}"
#   gsad:
#     tag: "{{ .Values.global.gvmImageTag }}"
#   openvas:
#     tag: "{{ .Values.global.gvmImageTag }}"

image:
  gvmd:
    registry: "docker.io"
    repository: "admirito/gvmd"
    tag: "21.4.4"
    pullPolicy: IfNotPresent
  gsad:
    registry: "docker.io"
    repository: "admirito/gsad"
    tag: "21.4.3"
    pullPolicy: IfNotPresent
  openvas:
    registry: "docker.io"
    repository: "konvergence/openvas-scanner"
    tag: "22.4.1-3"
    pullPolicy: IfNotPresent
  socat:
    registry: "docker.io"
    repository: "alpine/socat"
    tag: "1.7.4.4"
    pullPolicy: IfNotPresent


socket:
  openvas:
    listener: /run/ospd/ospd.sock
    connector:
      redis: /run/redis/redis.sock
  gvmd:
    connector:
      openvas: /run/ospd/ospd-openvas.sock



imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

labels:
  applicationName: gvm
  partOf: gvm
  instanceSuffix: ""

gvmdService:
  type: ClusterIP
  port: 9390

openvasService:
  type: ClusterIP
  port: 9391

## gsa service
service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: "nginx"
    # nginx.ingress.kubernetes.io/client-max-body-size: "0"
    # nginx.ingress.kubernetes.io/proxy-body-size: "0"
    # nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    # nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
    # nginx.ingress.kubernetes.io/proxy-stream-timeout: "1800"
    # nginx.ingress.kubernetes.io/upstream-keepalive-timeout: "300"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        # pathType: ImplementationSpecific
        # backend:
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  gvmd: {}
  gvmdOpenvasConnector: {}
  openvas: {}
  openvasListener: {}
  openvasRedisConnector: {}
  gsad: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

extraEnv:
  gvmd: []
  gsad: []
  openvas: []

## A cron job to synchronize feeds on a schedule
syncFeedsCronJob:
  enabled: true
  schedule: "@daily"

## update all the nvt, scap, cert and gvmd data feeds in a post
## installation hook
syncFeedsAfterInstall: false

customFeedsServer:
  ## Enable a deployment with a custom image that could be used as a
  ## custom rsync server to provide feeds for GVM components
  enabled: false
  image:
    registry: ""
    repository: ""
    tag: "latest"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 873
    containerPort: 873
  resources: {}
  ## Configure gvmd and openvas deployments to use the custom feed
  ## server service
  setDefaultFeedServerForGVM: true

## the value of dataSubPathPrefix will be used as the prefix for
## subPath in volumeMounts of gvmd/openvas deployments for the
## persistent volume specified by persistence parameters
dataSubPathPrefix: ""

## This is data persistence for nasl plugins / scap data / cert
## data. For database persistence see gvmd-db and openvas-redis.
persistence:
  ## It is highly recommended not to disable the
  ## persistence. Without enabling a persistent volume
  ## sharing nvt-plugins between gvmd and openvas-scanner is not
  ## possible
  enabled: true

  ## existing PVC to be used instead of creating a new one
  existingClaim: ""

  ## PVC annotations
  # annotations:

  accessMode: ReadWriteOnce
  # storageClass:
  # volumeName:
  size: 5Gi

secrets:
  ## existing secret to be used instead of creating a new one
  existingSecret:

  annotations: {}

  ## username and password of GVMD that will be stored in the created
  ## secret
  gvmdUsername: "admin"
  gvmdPassword: "admin"

#gvmd-db:
postgresql:
  image:
    ## You can override this one, or global.imageRegistry
    registry: "docker.io"
    repository: admirito/gvm-postgres
    tag: "21.4.5"
  volumePermissions:
    enabled: false
  primary:
    podSecurityContext:
      fsGroup: 999
    containerSecurityContext:
      runAsUser: 999
  auth:
    enablePostgresUser: false
    database: gvmd
    username: gvmduser
    existingSecret: postgresql-secret
    secretKeys:
      userPasswordKey: postgresql-password
  # primary:
  #   persistence:
  #     enabled: true
  #     existingClaim:
  #     mountPath: /bitnami/postgresql
  #     subPath: ""
  #     storageClass: "-"
  #     accessModes:
  #       - ReadWriteOnce
  #     size: 8Gi
  #     annotations: {}

#openvas-redis:
redis:
  image:
    ## You can override this one, or global.imageRegistry
    registry: "docker.io"
    repository: bitnami/redis
    tag: "5.0"
  commonConfiguration: |-
    # Default redis chart values:
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.
    save ""
    ## Values added for openvas:
    # Multiple KBs can be served in parallel, for multiple hosts
    # scanned by one or several tasks. This is done using redis
    # databases, which are independent namepaces. It is therefore
    # important that redis exports enough databases. This number can
    # be calculated using the following formula:
    # DB = 1 + (#of parallel tasks) * (#of parallel hosts)
    databases 1025

  architecture: standalone
  master:
    ## openvas requires "FLUSHDB" but it is disabled by default
    disableCommands: []

  # to remove WARNING you have Transparent Huge Pages (THP) support enabled
  sysctl:
    command:
      - sh
      - '-c'
      - echo never >/host-sys/kernel/mm/transparent_hugepage/enabled
    enabled: true
    mountHostSys: true

  auth:
    enabled: false
  # master:
  #   persistence:
  #     enabled: true
  #     existingClaim:
  #     subPath: ""
  #     storageClass: "-"
  #     accessModes:
  #       - ReadWriteOnce
  #     size: 8Gi
